// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module loop_uhat_sparse_loop_uhat_sparse_Pipeline_loop_uhat_integral (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sext_ln31,
        sext_ln35,
        R_exp,
        integral_address0,
        integral_ce0,
        integral_we0,
        integral_d0,
        grp_fu_378_p_din0,
        grp_fu_378_p_din1,
        grp_fu_378_p_dout0,
        grp_fu_378_p_ce,
        grp_pow_generic_double_s_fu_341_p_din1,
        grp_pow_generic_double_s_fu_341_p_din2,
        grp_pow_generic_double_s_fu_341_p_dout0,
        grp_pow_generic_double_s_fu_341_p_ce,
        grp_pow_generic_double_s_fu_341_p_start,
        grp_pow_generic_double_s_fu_341_p_ready,
        grp_pow_generic_double_s_fu_341_p_done,
        grp_pow_generic_double_s_fu_341_p_idle
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [63:0] m_axi_gmem_WDATA;
output  [7:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [63:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [60:0] sext_ln31;
input  [60:0] sext_ln35;
input  [63:0] R_exp;
output  [14:0] integral_address0;
output   integral_ce0;
output   integral_we0;
output  [63:0] integral_d0;
output  [63:0] grp_fu_378_p_din0;
output  [63:0] grp_fu_378_p_din1;
input  [63:0] grp_fu_378_p_dout0;
output   grp_fu_378_p_ce;
output  [63:0] grp_pow_generic_double_s_fu_341_p_din1;
output  [63:0] grp_pow_generic_double_s_fu_341_p_din2;
input  [63:0] grp_pow_generic_double_s_fu_341_p_dout0;
output   grp_pow_generic_double_s_fu_341_p_ce;
output   grp_pow_generic_double_s_fu_341_p_start;
input   grp_pow_generic_double_s_fu_341_p_ready;
input   grp_pow_generic_double_s_fu_341_p_done;
input   grp_pow_generic_double_s_fu_341_p_idle;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg integral_ce0;
reg integral_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln31_reg_273;
reg    ap_block_state2_io;
reg    ap_block_state10_pp0_stage1_iter4;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage1;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage0;
reg    ap_block_state11_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [14:0] i_1_reg_267;
reg   [14:0] i_1_reg_267_pp0_iter1_reg;
reg   [14:0] i_1_reg_267_pp0_iter2_reg;
reg   [14:0] i_1_reg_267_pp0_iter3_reg;
reg   [14:0] i_1_reg_267_pp0_iter4_reg;
reg   [14:0] i_1_reg_267_pp0_iter5_reg;
reg   [14:0] i_1_reg_267_pp0_iter6_reg;
reg   [14:0] i_1_reg_267_pp0_iter7_reg;
reg   [14:0] i_1_reg_267_pp0_iter8_reg;
reg   [14:0] i_1_reg_267_pp0_iter9_reg;
reg   [14:0] i_1_reg_267_pp0_iter10_reg;
reg   [14:0] i_1_reg_267_pp0_iter11_reg;
reg   [14:0] i_1_reg_267_pp0_iter12_reg;
reg   [14:0] i_1_reg_267_pp0_iter13_reg;
reg   [14:0] i_1_reg_267_pp0_iter14_reg;
reg   [14:0] i_1_reg_267_pp0_iter15_reg;
reg   [14:0] i_1_reg_267_pp0_iter16_reg;
reg   [14:0] i_1_reg_267_pp0_iter17_reg;
reg   [14:0] i_1_reg_267_pp0_iter18_reg;
reg   [14:0] i_1_reg_267_pp0_iter19_reg;
reg   [14:0] i_1_reg_267_pp0_iter20_reg;
reg   [14:0] i_1_reg_267_pp0_iter21_reg;
reg   [14:0] i_1_reg_267_pp0_iter22_reg;
reg   [14:0] i_1_reg_267_pp0_iter23_reg;
reg   [14:0] i_1_reg_267_pp0_iter24_reg;
reg   [14:0] i_1_reg_267_pp0_iter25_reg;
reg   [14:0] i_1_reg_267_pp0_iter26_reg;
reg   [14:0] i_1_reg_267_pp0_iter27_reg;
reg   [14:0] i_1_reg_267_pp0_iter28_reg;
reg   [14:0] i_1_reg_267_pp0_iter29_reg;
reg   [14:0] i_1_reg_267_pp0_iter30_reg;
reg   [14:0] i_1_reg_267_pp0_iter31_reg;
reg   [14:0] i_1_reg_267_pp0_iter32_reg;
reg   [14:0] i_1_reg_267_pp0_iter33_reg;
reg   [14:0] i_1_reg_267_pp0_iter34_reg;
reg   [14:0] i_1_reg_267_pp0_iter35_reg;
reg   [14:0] i_1_reg_267_pp0_iter36_reg;
reg   [14:0] i_1_reg_267_pp0_iter37_reg;
reg   [14:0] i_1_reg_267_pp0_iter38_reg;
reg   [14:0] i_1_reg_267_pp0_iter39_reg;
reg   [14:0] i_1_reg_267_pp0_iter40_reg;
reg   [14:0] i_1_reg_267_pp0_iter41_reg;
reg   [14:0] i_1_reg_267_pp0_iter42_reg;
reg   [14:0] i_1_reg_267_pp0_iter43_reg;
reg   [14:0] i_1_reg_267_pp0_iter44_reg;
reg   [14:0] i_1_reg_267_pp0_iter45_reg;
reg   [14:0] i_1_reg_267_pp0_iter46_reg;
reg   [14:0] i_1_reg_267_pp0_iter47_reg;
reg   [14:0] i_1_reg_267_pp0_iter48_reg;
reg   [14:0] i_1_reg_267_pp0_iter49_reg;
reg   [14:0] i_1_reg_267_pp0_iter50_reg;
reg   [14:0] i_1_reg_267_pp0_iter51_reg;
reg   [14:0] i_1_reg_267_pp0_iter52_reg;
wire   [0:0] icmp_ln31_fu_191_p2;
reg   [0:0] icmp_ln31_reg_273_pp0_iter1_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter2_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter3_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter4_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter5_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter6_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter7_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter8_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter9_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter10_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter11_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter12_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter13_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter14_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter15_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter16_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter17_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter18_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter19_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter20_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter21_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter22_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter23_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter24_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter25_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter26_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter27_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter28_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter29_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter30_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter31_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter32_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter33_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter34_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter35_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter36_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter37_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter38_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter39_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter40_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter41_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter42_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter43_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter44_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter45_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter46_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter47_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter48_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter49_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter50_reg;
reg   [0:0] icmp_ln31_reg_273_pp0_iter51_reg;
wire   [61:0] add_ln32_fu_201_p2;
reg   [61:0] add_ln32_reg_277;
wire   [61:0] add_ln32_1_fu_207_p2;
reg   [61:0] add_ln32_1_reg_282;
reg    ap_block_pp0_stage1_11001;
reg   [63:0] gmem_addr_read_reg_299;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter5_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter6_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter7_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter8_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter9_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter10_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter11_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter12_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter13_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter14_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter15_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter16_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter17_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter18_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter19_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter20_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter21_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter22_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter23_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter24_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter25_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter26_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter27_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter28_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter29_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter30_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter31_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter32_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter33_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter34_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter35_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter36_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter37_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter38_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter39_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter40_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter41_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter42_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter43_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter44_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter45_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter46_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter47_reg;
reg   [63:0] gmem_addr_read_reg_299_pp0_iter48_reg;
reg   [63:0] gmem_addr_1_read_reg_304;
reg   [63:0] tmp_reg_309;
wire   [63:0] bitcast_ln32_fu_247_p1;
reg   [63:0] mul_reg_319;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire    grp_pow_generic_double_s_fu_141_ap_ready;
reg    grp_pow_generic_double_s_fu_141_ap_ce;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call17;
reg    ap_block_pp0_stage1_11001_ignoreCallOp151;
reg    ap_block_state11_pp0_stage0_iter5_ignore_call17;
reg    ap_block_pp0_stage0_11001_ignoreCallOp152;
reg    grp_pow_generic_double_s_fu_141_ap_start_reg;
wire   [63:0] bitcast_ln32_1_fu_243_p1;
wire   [63:0] zext_ln31_fu_251_p1;
wire  signed [63:0] sext_ln32_fu_218_p1;
wire  signed [63:0] sext_ln32_1_fu_233_p1;
reg   [14:0] i_fu_82;
wire   [14:0] add_ln31_fu_213_p2;
wire    ap_loop_init;
reg   [14:0] ap_sig_allocacmp_i_1;
wire   [61:0] zext_ln31_1_fu_197_p1;
wire  signed [61:0] sext_ln31_cast_fu_179_p1;
wire  signed [61:0] sext_ln35_cast_fu_175_p1;
reg    grp_fu_171_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter52_stage0;
reg    ap_idle_pp0_0to51;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to53;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_pow_generic_double_s_fu_141_ap_start_reg = 1'b0;
#0 i_fu_82 = 15'd0;
#0 ap_done_reg = 1'b0;
end

loop_uhat_sparse_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter52_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter53 == 1'b1))) begin
            ap_enable_reg_pp0_iter53 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pow_generic_double_s_fu_141_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_pow_generic_double_s_fu_141_ap_start_reg <= 1'b1;
        end else if ((grp_pow_generic_double_s_fu_141_ap_ready == 1'b1)) begin
            grp_pow_generic_double_s_fu_141_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter37_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter38_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter39_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter40_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter41_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter42_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter43_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter44_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter45_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter46_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter47_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter48_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter49_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter50_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter51_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter52_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_82 <= 15'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln31_reg_273 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_82 <= add_ln31_fu_213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln32_1_reg_282 <= add_ln32_1_fu_207_p2;
        add_ln32_reg_277 <= add_ln32_fu_201_p2;
        gmem_addr_1_read_reg_304 <= m_axi_gmem_RDATA;
        i_1_reg_267 <= ap_sig_allocacmp_i_1;
        i_1_reg_267_pp0_iter10_reg <= i_1_reg_267_pp0_iter9_reg;
        i_1_reg_267_pp0_iter11_reg <= i_1_reg_267_pp0_iter10_reg;
        i_1_reg_267_pp0_iter12_reg <= i_1_reg_267_pp0_iter11_reg;
        i_1_reg_267_pp0_iter13_reg <= i_1_reg_267_pp0_iter12_reg;
        i_1_reg_267_pp0_iter14_reg <= i_1_reg_267_pp0_iter13_reg;
        i_1_reg_267_pp0_iter15_reg <= i_1_reg_267_pp0_iter14_reg;
        i_1_reg_267_pp0_iter16_reg <= i_1_reg_267_pp0_iter15_reg;
        i_1_reg_267_pp0_iter17_reg <= i_1_reg_267_pp0_iter16_reg;
        i_1_reg_267_pp0_iter18_reg <= i_1_reg_267_pp0_iter17_reg;
        i_1_reg_267_pp0_iter19_reg <= i_1_reg_267_pp0_iter18_reg;
        i_1_reg_267_pp0_iter1_reg <= i_1_reg_267;
        i_1_reg_267_pp0_iter20_reg <= i_1_reg_267_pp0_iter19_reg;
        i_1_reg_267_pp0_iter21_reg <= i_1_reg_267_pp0_iter20_reg;
        i_1_reg_267_pp0_iter22_reg <= i_1_reg_267_pp0_iter21_reg;
        i_1_reg_267_pp0_iter23_reg <= i_1_reg_267_pp0_iter22_reg;
        i_1_reg_267_pp0_iter24_reg <= i_1_reg_267_pp0_iter23_reg;
        i_1_reg_267_pp0_iter25_reg <= i_1_reg_267_pp0_iter24_reg;
        i_1_reg_267_pp0_iter26_reg <= i_1_reg_267_pp0_iter25_reg;
        i_1_reg_267_pp0_iter27_reg <= i_1_reg_267_pp0_iter26_reg;
        i_1_reg_267_pp0_iter28_reg <= i_1_reg_267_pp0_iter27_reg;
        i_1_reg_267_pp0_iter29_reg <= i_1_reg_267_pp0_iter28_reg;
        i_1_reg_267_pp0_iter2_reg <= i_1_reg_267_pp0_iter1_reg;
        i_1_reg_267_pp0_iter30_reg <= i_1_reg_267_pp0_iter29_reg;
        i_1_reg_267_pp0_iter31_reg <= i_1_reg_267_pp0_iter30_reg;
        i_1_reg_267_pp0_iter32_reg <= i_1_reg_267_pp0_iter31_reg;
        i_1_reg_267_pp0_iter33_reg <= i_1_reg_267_pp0_iter32_reg;
        i_1_reg_267_pp0_iter34_reg <= i_1_reg_267_pp0_iter33_reg;
        i_1_reg_267_pp0_iter35_reg <= i_1_reg_267_pp0_iter34_reg;
        i_1_reg_267_pp0_iter36_reg <= i_1_reg_267_pp0_iter35_reg;
        i_1_reg_267_pp0_iter37_reg <= i_1_reg_267_pp0_iter36_reg;
        i_1_reg_267_pp0_iter38_reg <= i_1_reg_267_pp0_iter37_reg;
        i_1_reg_267_pp0_iter39_reg <= i_1_reg_267_pp0_iter38_reg;
        i_1_reg_267_pp0_iter3_reg <= i_1_reg_267_pp0_iter2_reg;
        i_1_reg_267_pp0_iter40_reg <= i_1_reg_267_pp0_iter39_reg;
        i_1_reg_267_pp0_iter41_reg <= i_1_reg_267_pp0_iter40_reg;
        i_1_reg_267_pp0_iter42_reg <= i_1_reg_267_pp0_iter41_reg;
        i_1_reg_267_pp0_iter43_reg <= i_1_reg_267_pp0_iter42_reg;
        i_1_reg_267_pp0_iter44_reg <= i_1_reg_267_pp0_iter43_reg;
        i_1_reg_267_pp0_iter45_reg <= i_1_reg_267_pp0_iter44_reg;
        i_1_reg_267_pp0_iter46_reg <= i_1_reg_267_pp0_iter45_reg;
        i_1_reg_267_pp0_iter47_reg <= i_1_reg_267_pp0_iter46_reg;
        i_1_reg_267_pp0_iter48_reg <= i_1_reg_267_pp0_iter47_reg;
        i_1_reg_267_pp0_iter49_reg <= i_1_reg_267_pp0_iter48_reg;
        i_1_reg_267_pp0_iter4_reg <= i_1_reg_267_pp0_iter3_reg;
        i_1_reg_267_pp0_iter50_reg <= i_1_reg_267_pp0_iter49_reg;
        i_1_reg_267_pp0_iter51_reg <= i_1_reg_267_pp0_iter50_reg;
        i_1_reg_267_pp0_iter52_reg <= i_1_reg_267_pp0_iter51_reg;
        i_1_reg_267_pp0_iter5_reg <= i_1_reg_267_pp0_iter4_reg;
        i_1_reg_267_pp0_iter6_reg <= i_1_reg_267_pp0_iter5_reg;
        i_1_reg_267_pp0_iter7_reg <= i_1_reg_267_pp0_iter6_reg;
        i_1_reg_267_pp0_iter8_reg <= i_1_reg_267_pp0_iter7_reg;
        i_1_reg_267_pp0_iter9_reg <= i_1_reg_267_pp0_iter8_reg;
        icmp_ln31_reg_273 <= icmp_ln31_fu_191_p2;
        icmp_ln31_reg_273_pp0_iter10_reg <= icmp_ln31_reg_273_pp0_iter9_reg;
        icmp_ln31_reg_273_pp0_iter11_reg <= icmp_ln31_reg_273_pp0_iter10_reg;
        icmp_ln31_reg_273_pp0_iter12_reg <= icmp_ln31_reg_273_pp0_iter11_reg;
        icmp_ln31_reg_273_pp0_iter13_reg <= icmp_ln31_reg_273_pp0_iter12_reg;
        icmp_ln31_reg_273_pp0_iter14_reg <= icmp_ln31_reg_273_pp0_iter13_reg;
        icmp_ln31_reg_273_pp0_iter15_reg <= icmp_ln31_reg_273_pp0_iter14_reg;
        icmp_ln31_reg_273_pp0_iter16_reg <= icmp_ln31_reg_273_pp0_iter15_reg;
        icmp_ln31_reg_273_pp0_iter17_reg <= icmp_ln31_reg_273_pp0_iter16_reg;
        icmp_ln31_reg_273_pp0_iter18_reg <= icmp_ln31_reg_273_pp0_iter17_reg;
        icmp_ln31_reg_273_pp0_iter19_reg <= icmp_ln31_reg_273_pp0_iter18_reg;
        icmp_ln31_reg_273_pp0_iter1_reg <= icmp_ln31_reg_273;
        icmp_ln31_reg_273_pp0_iter20_reg <= icmp_ln31_reg_273_pp0_iter19_reg;
        icmp_ln31_reg_273_pp0_iter21_reg <= icmp_ln31_reg_273_pp0_iter20_reg;
        icmp_ln31_reg_273_pp0_iter22_reg <= icmp_ln31_reg_273_pp0_iter21_reg;
        icmp_ln31_reg_273_pp0_iter23_reg <= icmp_ln31_reg_273_pp0_iter22_reg;
        icmp_ln31_reg_273_pp0_iter24_reg <= icmp_ln31_reg_273_pp0_iter23_reg;
        icmp_ln31_reg_273_pp0_iter25_reg <= icmp_ln31_reg_273_pp0_iter24_reg;
        icmp_ln31_reg_273_pp0_iter26_reg <= icmp_ln31_reg_273_pp0_iter25_reg;
        icmp_ln31_reg_273_pp0_iter27_reg <= icmp_ln31_reg_273_pp0_iter26_reg;
        icmp_ln31_reg_273_pp0_iter28_reg <= icmp_ln31_reg_273_pp0_iter27_reg;
        icmp_ln31_reg_273_pp0_iter29_reg <= icmp_ln31_reg_273_pp0_iter28_reg;
        icmp_ln31_reg_273_pp0_iter2_reg <= icmp_ln31_reg_273_pp0_iter1_reg;
        icmp_ln31_reg_273_pp0_iter30_reg <= icmp_ln31_reg_273_pp0_iter29_reg;
        icmp_ln31_reg_273_pp0_iter31_reg <= icmp_ln31_reg_273_pp0_iter30_reg;
        icmp_ln31_reg_273_pp0_iter32_reg <= icmp_ln31_reg_273_pp0_iter31_reg;
        icmp_ln31_reg_273_pp0_iter33_reg <= icmp_ln31_reg_273_pp0_iter32_reg;
        icmp_ln31_reg_273_pp0_iter34_reg <= icmp_ln31_reg_273_pp0_iter33_reg;
        icmp_ln31_reg_273_pp0_iter35_reg <= icmp_ln31_reg_273_pp0_iter34_reg;
        icmp_ln31_reg_273_pp0_iter36_reg <= icmp_ln31_reg_273_pp0_iter35_reg;
        icmp_ln31_reg_273_pp0_iter37_reg <= icmp_ln31_reg_273_pp0_iter36_reg;
        icmp_ln31_reg_273_pp0_iter38_reg <= icmp_ln31_reg_273_pp0_iter37_reg;
        icmp_ln31_reg_273_pp0_iter39_reg <= icmp_ln31_reg_273_pp0_iter38_reg;
        icmp_ln31_reg_273_pp0_iter3_reg <= icmp_ln31_reg_273_pp0_iter2_reg;
        icmp_ln31_reg_273_pp0_iter40_reg <= icmp_ln31_reg_273_pp0_iter39_reg;
        icmp_ln31_reg_273_pp0_iter41_reg <= icmp_ln31_reg_273_pp0_iter40_reg;
        icmp_ln31_reg_273_pp0_iter42_reg <= icmp_ln31_reg_273_pp0_iter41_reg;
        icmp_ln31_reg_273_pp0_iter43_reg <= icmp_ln31_reg_273_pp0_iter42_reg;
        icmp_ln31_reg_273_pp0_iter44_reg <= icmp_ln31_reg_273_pp0_iter43_reg;
        icmp_ln31_reg_273_pp0_iter45_reg <= icmp_ln31_reg_273_pp0_iter44_reg;
        icmp_ln31_reg_273_pp0_iter46_reg <= icmp_ln31_reg_273_pp0_iter45_reg;
        icmp_ln31_reg_273_pp0_iter47_reg <= icmp_ln31_reg_273_pp0_iter46_reg;
        icmp_ln31_reg_273_pp0_iter48_reg <= icmp_ln31_reg_273_pp0_iter47_reg;
        icmp_ln31_reg_273_pp0_iter49_reg <= icmp_ln31_reg_273_pp0_iter48_reg;
        icmp_ln31_reg_273_pp0_iter4_reg <= icmp_ln31_reg_273_pp0_iter3_reg;
        icmp_ln31_reg_273_pp0_iter50_reg <= icmp_ln31_reg_273_pp0_iter49_reg;
        icmp_ln31_reg_273_pp0_iter51_reg <= icmp_ln31_reg_273_pp0_iter50_reg;
        icmp_ln31_reg_273_pp0_iter5_reg <= icmp_ln31_reg_273_pp0_iter4_reg;
        icmp_ln31_reg_273_pp0_iter6_reg <= icmp_ln31_reg_273_pp0_iter5_reg;
        icmp_ln31_reg_273_pp0_iter7_reg <= icmp_ln31_reg_273_pp0_iter6_reg;
        icmp_ln31_reg_273_pp0_iter8_reg <= icmp_ln31_reg_273_pp0_iter7_reg;
        icmp_ln31_reg_273_pp0_iter9_reg <= icmp_ln31_reg_273_pp0_iter8_reg;
        tmp_reg_309 <= grp_pow_generic_double_s_fu_341_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem_addr_read_reg_299 <= m_axi_gmem_RDATA;
        gmem_addr_read_reg_299_pp0_iter10_reg <= gmem_addr_read_reg_299_pp0_iter9_reg;
        gmem_addr_read_reg_299_pp0_iter11_reg <= gmem_addr_read_reg_299_pp0_iter10_reg;
        gmem_addr_read_reg_299_pp0_iter12_reg <= gmem_addr_read_reg_299_pp0_iter11_reg;
        gmem_addr_read_reg_299_pp0_iter13_reg <= gmem_addr_read_reg_299_pp0_iter12_reg;
        gmem_addr_read_reg_299_pp0_iter14_reg <= gmem_addr_read_reg_299_pp0_iter13_reg;
        gmem_addr_read_reg_299_pp0_iter15_reg <= gmem_addr_read_reg_299_pp0_iter14_reg;
        gmem_addr_read_reg_299_pp0_iter16_reg <= gmem_addr_read_reg_299_pp0_iter15_reg;
        gmem_addr_read_reg_299_pp0_iter17_reg <= gmem_addr_read_reg_299_pp0_iter16_reg;
        gmem_addr_read_reg_299_pp0_iter18_reg <= gmem_addr_read_reg_299_pp0_iter17_reg;
        gmem_addr_read_reg_299_pp0_iter19_reg <= gmem_addr_read_reg_299_pp0_iter18_reg;
        gmem_addr_read_reg_299_pp0_iter20_reg <= gmem_addr_read_reg_299_pp0_iter19_reg;
        gmem_addr_read_reg_299_pp0_iter21_reg <= gmem_addr_read_reg_299_pp0_iter20_reg;
        gmem_addr_read_reg_299_pp0_iter22_reg <= gmem_addr_read_reg_299_pp0_iter21_reg;
        gmem_addr_read_reg_299_pp0_iter23_reg <= gmem_addr_read_reg_299_pp0_iter22_reg;
        gmem_addr_read_reg_299_pp0_iter24_reg <= gmem_addr_read_reg_299_pp0_iter23_reg;
        gmem_addr_read_reg_299_pp0_iter25_reg <= gmem_addr_read_reg_299_pp0_iter24_reg;
        gmem_addr_read_reg_299_pp0_iter26_reg <= gmem_addr_read_reg_299_pp0_iter25_reg;
        gmem_addr_read_reg_299_pp0_iter27_reg <= gmem_addr_read_reg_299_pp0_iter26_reg;
        gmem_addr_read_reg_299_pp0_iter28_reg <= gmem_addr_read_reg_299_pp0_iter27_reg;
        gmem_addr_read_reg_299_pp0_iter29_reg <= gmem_addr_read_reg_299_pp0_iter28_reg;
        gmem_addr_read_reg_299_pp0_iter30_reg <= gmem_addr_read_reg_299_pp0_iter29_reg;
        gmem_addr_read_reg_299_pp0_iter31_reg <= gmem_addr_read_reg_299_pp0_iter30_reg;
        gmem_addr_read_reg_299_pp0_iter32_reg <= gmem_addr_read_reg_299_pp0_iter31_reg;
        gmem_addr_read_reg_299_pp0_iter33_reg <= gmem_addr_read_reg_299_pp0_iter32_reg;
        gmem_addr_read_reg_299_pp0_iter34_reg <= gmem_addr_read_reg_299_pp0_iter33_reg;
        gmem_addr_read_reg_299_pp0_iter35_reg <= gmem_addr_read_reg_299_pp0_iter34_reg;
        gmem_addr_read_reg_299_pp0_iter36_reg <= gmem_addr_read_reg_299_pp0_iter35_reg;
        gmem_addr_read_reg_299_pp0_iter37_reg <= gmem_addr_read_reg_299_pp0_iter36_reg;
        gmem_addr_read_reg_299_pp0_iter38_reg <= gmem_addr_read_reg_299_pp0_iter37_reg;
        gmem_addr_read_reg_299_pp0_iter39_reg <= gmem_addr_read_reg_299_pp0_iter38_reg;
        gmem_addr_read_reg_299_pp0_iter40_reg <= gmem_addr_read_reg_299_pp0_iter39_reg;
        gmem_addr_read_reg_299_pp0_iter41_reg <= gmem_addr_read_reg_299_pp0_iter40_reg;
        gmem_addr_read_reg_299_pp0_iter42_reg <= gmem_addr_read_reg_299_pp0_iter41_reg;
        gmem_addr_read_reg_299_pp0_iter43_reg <= gmem_addr_read_reg_299_pp0_iter42_reg;
        gmem_addr_read_reg_299_pp0_iter44_reg <= gmem_addr_read_reg_299_pp0_iter43_reg;
        gmem_addr_read_reg_299_pp0_iter45_reg <= gmem_addr_read_reg_299_pp0_iter44_reg;
        gmem_addr_read_reg_299_pp0_iter46_reg <= gmem_addr_read_reg_299_pp0_iter45_reg;
        gmem_addr_read_reg_299_pp0_iter47_reg <= gmem_addr_read_reg_299_pp0_iter46_reg;
        gmem_addr_read_reg_299_pp0_iter48_reg <= gmem_addr_read_reg_299_pp0_iter47_reg;
        gmem_addr_read_reg_299_pp0_iter5_reg <= gmem_addr_read_reg_299;
        gmem_addr_read_reg_299_pp0_iter6_reg <= gmem_addr_read_reg_299_pp0_iter5_reg;
        gmem_addr_read_reg_299_pp0_iter7_reg <= gmem_addr_read_reg_299_pp0_iter6_reg;
        gmem_addr_read_reg_299_pp0_iter8_reg <= gmem_addr_read_reg_299_pp0_iter7_reg;
        gmem_addr_read_reg_299_pp0_iter9_reg <= gmem_addr_read_reg_299_pp0_iter8_reg;
        mul_reg_319 <= grp_fu_378_p_dout0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln31_reg_273 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_273_pp0_iter51_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter52 == 1'b1))) begin
        ap_condition_exit_pp0_iter52_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter52_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter52_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) 
    & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) 
    & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to51 = 1'b1;
    end else begin
        ap_idle_pp0_0to51 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) 
    & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to53 = 1'b1;
    end else begin
        ap_idle_pp0_1to53 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 15'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_82;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln31_reg_273 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_171_ce = 1'b1;
    end else begin
        grp_fu_171_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp152) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp151) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_pow_generic_double_s_fu_141_ap_ce = 1'b1;
    end else begin
        grp_pow_generic_double_s_fu_141_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter53 == 1'b1))) begin
        integral_ce0 = 1'b1;
    end else begin
        integral_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter53 == 1'b1))) begin
        integral_we0 = 1'b1;
    end else begin
        integral_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem_ARADDR = sext_ln32_1_fu_233_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln31_reg_273 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_axi_gmem_ARADDR = sext_ln32_fu_218_p1;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln31_reg_273 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to51 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter52_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to53 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_fu_213_p2 = (i_1_reg_267 + 15'd1);

assign add_ln32_1_fu_207_p2 = ($signed(zext_ln31_1_fu_197_p1) + $signed(sext_ln35_cast_fu_175_p1));

assign add_ln32_fu_201_p2 = ($signed(zext_ln31_1_fu_197_p1) + $signed(sext_ln31_cast_fu_179_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp152 = (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage0_iter5_ignore_call17)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage1_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp151 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage1_iter4_ignore_call17)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage1_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call17 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter5 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter5_ignore_call17 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state2_io = ((icmp_ln31_reg_273 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign bitcast_ln32_1_fu_243_p1 = gmem_addr_1_read_reg_304;

assign bitcast_ln32_fu_247_p1 = gmem_addr_read_reg_299_pp0_iter48_reg;

assign grp_fu_378_p_ce = grp_fu_171_ce;

assign grp_fu_378_p_din0 = bitcast_ln32_fu_247_p1;

assign grp_fu_378_p_din1 = tmp_reg_309;

assign grp_pow_generic_double_s_fu_141_ap_ready = grp_pow_generic_double_s_fu_341_p_ready;

assign grp_pow_generic_double_s_fu_341_p_ce = grp_pow_generic_double_s_fu_141_ap_ce;

assign grp_pow_generic_double_s_fu_341_p_din1 = bitcast_ln32_1_fu_243_p1;

assign grp_pow_generic_double_s_fu_341_p_din2 = R_exp;

assign grp_pow_generic_double_s_fu_341_p_start = grp_pow_generic_double_s_fu_141_ap_start_reg;

assign icmp_ln31_fu_191_p2 = ((ap_sig_allocacmp_i_1 == 15'd17048) ? 1'b1 : 1'b0);

assign integral_address0 = zext_ln31_fu_251_p1;

assign integral_d0 = mul_reg_319;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 64'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 8'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign sext_ln31_cast_fu_179_p1 = $signed(sext_ln31);

assign sext_ln32_1_fu_233_p1 = $signed(add_ln32_1_reg_282);

assign sext_ln32_fu_218_p1 = $signed(add_ln32_reg_277);

assign sext_ln35_cast_fu_175_p1 = $signed(sext_ln35);

assign zext_ln31_1_fu_197_p1 = ap_sig_allocacmp_i_1;

assign zext_ln31_fu_251_p1 = i_1_reg_267_pp0_iter52_reg;

endmodule //loop_uhat_sparse_loop_uhat_sparse_Pipeline_loop_uhat_integral
