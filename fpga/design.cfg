#check if the platform is the latest version ------- DO NOT TOUCH ON AWS
platform=xilinx_aws-vu9p-f1_shell-v04261818_201920_3
debug=1
profile_kernel=data:all:all:all     # Generate reports during debug, runtime, 
save-temps=1                    
# ----------- DO NOT TOUCH AWS    

[hls]
pre_tcl=hls_config.tcl              # Specify name of the file with compiler constraints/optimization commands
#Enable either single kernel or three kernel
##############single kernel start################ 
[connectivity]
nk=runOnfpga:1:runOnfpga_1
##############single kernel end################## 

###############three kernel start################ 
#[connectivity]
#nk=runOnfpga:3:runOnfpga_1.runOnfpga_2.runOnfpga_3          # specify kernel name (runOnfpga), and create three instances with names (runOnfpga_1,_2,_3). Change these names in app.cpp
#
##slr=<compute_unit_name>:<slr_ID>                           # Assign kernel instances (runOnfpga_1,_2,_3) to SLR0,SLR1,SLR2. SLR2 is empty without AWS resources. So use it for single-kernel
#slr=runOnfpga_1:SLR2
#slr=runOnfpga_2:SLR1
#slr=runOnfpga_3:SLR0

# ----------------------------- TO MAKE LIFE OF COMPILER EASIER (YOU COULD SKIP AT THE BEGINNING). Requires using command xclbinutil to find out DDR numbers associated with SLR
#CHECK COMMENT [connectivity]                              # Stream data at the same time. For each of SLR
# Stream data at the same time. For each of SLR. 
# In hw.cpp: #pragma HLS INTERFACE m_axi port=hw_agshock offset=slave bundle=gmem0
#sp=runOnfpga_1.m_axi_gmem0:DDR[1]               # In hw.cpp bundle all ports and we gave name gmem0. Syntax is: m_axi_#NAMEOFBUNDLE:#ACCESS-PORT. The number in DDR is obtained from 
#sp=runOnfpga_2.m_axi_gmem0:DDR[0] 
#sp=runOnfpga_3.m_axi_gmem0:DDR[3] 
# ----------------------------- TO MAKE LIFE OF COMPILER EASIER (YOU COULD SKIP AT THE BEGINNING)

# sp=runOnfpga_1.hw_agshock:DDR[1]
# sp=runOnfpga_1.hw_idshock:DDR[1]
# sp=runOnfpga_1.preinit:DDR[1]
# sp=runOnfpga_1.results:DDR[1]
# sp=runOnfpga_1.hw_iter:DDR[1]

# sp=runOnfpga_2.hw_agshock:DDR[0]
# sp=runOnfpga_2.hw_idshock:DDR[0]
# sp=runOnfpga_2.preinit:DDR[0]
# sp=runOnfpga_2.results:DDR[0]
# sp=runOnfpga_2.hw_iter:DDR[0]

# sp=runOnfpga_3.hw_agshock:DDR[3]
# sp=runOnfpga_3.hw_idshock:DDR[3]
# sp=runOnfpga_3.preinit:DDR[3]
# sp=runOnfpga_3.results:DDR[3]
# sp=runOnfpga_3.hw_iter:DDR[3]
###############three kernel end################## 

[vivado]
#prop=run.impl_1.strategy=Performance_ExtraTimingOpt


#prop=run.impl_1.strategy=Performance_Explore
#prop=run.impl_1.strategy=Performance_NetDelay_high
#prop=run.impl_1.strategy=Performance_WLBlockPlacementFanoutOpt
#prop=run.impl_1.strategy=Performance_WLBlockPlacement
#prop=run.impl_1.strategy=Performance_ExploreWithRemap
# prop=run.impl_1.strategy=Performance_BalanceSLRs
# prop=run.impl_1.strategy=Performance_EarlyBlockPlacement
#prop=run.impl_1.strategy=Performance_NetDelay_low
# prop=run.impl_1.strategy=Congestion_SpreadLogic_low
#param=place.runPartPlacer=0