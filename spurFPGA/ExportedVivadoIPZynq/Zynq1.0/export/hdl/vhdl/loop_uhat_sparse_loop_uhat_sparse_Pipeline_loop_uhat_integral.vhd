-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity loop_uhat_sparse_loop_uhat_sparse_Pipeline_loop_uhat_integral is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln40 : IN STD_LOGIC_VECTOR (60 downto 0);
    sext_ln44 : IN STD_LOGIC_VECTOR (60 downto 0);
    R_exp : IN STD_LOGIC_VECTOR (63 downto 0);
    integral_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    integral_ce0 : OUT STD_LOGIC;
    integral_we0 : OUT STD_LOGIC;
    integral_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_426_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_426_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_426_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_426_p_ce : OUT STD_LOGIC;
    grp_pow_generic_double_s_fu_390_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_pow_generic_double_s_fu_390_p_din2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_pow_generic_double_s_fu_390_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_pow_generic_double_s_fu_390_p_ce : OUT STD_LOGIC;
    grp_pow_generic_double_s_fu_390_p_start : OUT STD_LOGIC;
    grp_pow_generic_double_s_fu_390_p_ready : IN STD_LOGIC;
    grp_pow_generic_double_s_fu_390_p_done : IN STD_LOGIC;
    grp_pow_generic_double_s_fu_390_p_idle : IN STD_LOGIC );
end;


architecture behav of loop_uhat_sparse_loop_uhat_sparse_Pipeline_loop_uhat_integral is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv15_4298 : STD_LOGIC_VECTOR (14 downto 0) := "100001010011000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter38 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter40 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter41 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter42 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter43 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter44 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter45 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter46 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter47 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter48 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter49 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter50 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter51 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter52 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter53 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal icmp_ln40_reg_273 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_1_reg_267 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter1_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter3_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter4_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter6_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter7_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter8_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter9_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter10_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter11_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter12_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter13_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter14_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter15_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter16_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter17_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter18_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter19_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter20_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter21_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter22_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter23_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter24_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter25_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter26_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter27_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter28_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter29_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter30_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter31_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter32_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter33_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter34_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter35_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter36_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter37_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter38_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter39_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter40_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter41_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter42_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter43_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter44_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter45_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter46_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter47_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter48_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter49_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter50_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter51_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal i_1_reg_267_pp0_iter52_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln40_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter43_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter44_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter45_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter46_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter47_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter48_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter49_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter50_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_273_pp0_iter51_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln41_fu_201_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln41_reg_277 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln41_1_fu_207_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln41_1_reg_282 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal gmem_addr_read_reg_299 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter20_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter26_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter27_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter28_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter29_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter30_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter31_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter32_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter33_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter34_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter35_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter36_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter37_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter38_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter39_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter40_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter41_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter42_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter43_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter44_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter45_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter46_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter47_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_299_pp0_iter48_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_read_reg_304 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_309 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_fu_247_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_reg_319 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_pow_generic_double_s_fu_141_ap_ready : STD_LOGIC;
    signal grp_pow_generic_double_s_fu_141_ap_ce : STD_LOGIC;
    signal ap_block_state10_pp0_stage1_iter4_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp151 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp152 : BOOLEAN;
    signal grp_pow_generic_double_s_fu_141_ap_start_reg : STD_LOGIC := '0';
    signal bitcast_ln41_1_fu_243_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln40_fu_251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln41_fu_218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln41_1_fu_233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_82 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal add_ln40_fu_213_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln40_1_fu_197_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln40_cast_fu_179_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln44_cast_fu_175_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_171_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter52_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to51 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter21_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter22_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter23_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter24_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter25_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter26_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter27_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter28_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter29_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter30_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter31_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter32_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter33_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter34_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter35_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter36_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter37_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter38_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter39_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter40_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter41_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter42_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter43_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter44_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter45_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter46_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter47_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter48_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter49_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter50_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter51_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter52_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to53 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component loop_uhat_sparse_pow_generic_double_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        base_r : IN STD_LOGIC_VECTOR (63 downto 0);
        exp : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component loop_uhat_sparse_dmul_64ns_64ns_64_7_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component loop_uhat_sparse_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component loop_uhat_sparse_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter52_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter38 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter40 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter41 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter42 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter43 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter44 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter45 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter46 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter47 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter48 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter49 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter50 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter51 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter52 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter53 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter53 = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter53 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_pow_generic_double_s_fu_141_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pow_generic_double_s_fu_141_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_pow_generic_double_s_fu_141_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pow_generic_double_s_fu_141_ap_ready = ap_const_logic_1)) then 
                    grp_pow_generic_double_s_fu_141_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter13_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter14_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter15_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter16_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter16_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter17_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter17_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter18_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter18_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter19_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter19_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter20_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter20_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter21_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter21_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter22_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter22_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter23_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter23_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter24_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter24_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter25_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter25_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter26_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter26_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter27_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter27_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter28_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter28_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter29_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter29_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter30_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter30_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter31_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter31_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter32_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter32_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter33_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter33_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter34_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter34_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter35_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter35_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter36_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter36_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter37_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter37_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter38_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter38_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter39_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter39_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter40_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter40_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter41_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter41_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter42_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter42_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter43_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter43_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter44_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter44_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter45_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter45_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter46_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter46_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter47_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter47_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter48_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter48_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter49_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter49_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter50_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter50_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter51_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter51_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter52_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter52_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    i_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_fu_82 <= ap_const_lv15_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln40_reg_273 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                i_fu_82 <= add_ln40_fu_213_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln41_1_reg_282 <= add_ln41_1_fu_207_p2;
                add_ln41_reg_277 <= add_ln41_fu_201_p2;
                gmem_addr_1_read_reg_304 <= m_axi_gmem_RDATA;
                i_1_reg_267 <= ap_sig_allocacmp_i_1;
                i_1_reg_267_pp0_iter10_reg <= i_1_reg_267_pp0_iter9_reg;
                i_1_reg_267_pp0_iter11_reg <= i_1_reg_267_pp0_iter10_reg;
                i_1_reg_267_pp0_iter12_reg <= i_1_reg_267_pp0_iter11_reg;
                i_1_reg_267_pp0_iter13_reg <= i_1_reg_267_pp0_iter12_reg;
                i_1_reg_267_pp0_iter14_reg <= i_1_reg_267_pp0_iter13_reg;
                i_1_reg_267_pp0_iter15_reg <= i_1_reg_267_pp0_iter14_reg;
                i_1_reg_267_pp0_iter16_reg <= i_1_reg_267_pp0_iter15_reg;
                i_1_reg_267_pp0_iter17_reg <= i_1_reg_267_pp0_iter16_reg;
                i_1_reg_267_pp0_iter18_reg <= i_1_reg_267_pp0_iter17_reg;
                i_1_reg_267_pp0_iter19_reg <= i_1_reg_267_pp0_iter18_reg;
                i_1_reg_267_pp0_iter1_reg <= i_1_reg_267;
                i_1_reg_267_pp0_iter20_reg <= i_1_reg_267_pp0_iter19_reg;
                i_1_reg_267_pp0_iter21_reg <= i_1_reg_267_pp0_iter20_reg;
                i_1_reg_267_pp0_iter22_reg <= i_1_reg_267_pp0_iter21_reg;
                i_1_reg_267_pp0_iter23_reg <= i_1_reg_267_pp0_iter22_reg;
                i_1_reg_267_pp0_iter24_reg <= i_1_reg_267_pp0_iter23_reg;
                i_1_reg_267_pp0_iter25_reg <= i_1_reg_267_pp0_iter24_reg;
                i_1_reg_267_pp0_iter26_reg <= i_1_reg_267_pp0_iter25_reg;
                i_1_reg_267_pp0_iter27_reg <= i_1_reg_267_pp0_iter26_reg;
                i_1_reg_267_pp0_iter28_reg <= i_1_reg_267_pp0_iter27_reg;
                i_1_reg_267_pp0_iter29_reg <= i_1_reg_267_pp0_iter28_reg;
                i_1_reg_267_pp0_iter2_reg <= i_1_reg_267_pp0_iter1_reg;
                i_1_reg_267_pp0_iter30_reg <= i_1_reg_267_pp0_iter29_reg;
                i_1_reg_267_pp0_iter31_reg <= i_1_reg_267_pp0_iter30_reg;
                i_1_reg_267_pp0_iter32_reg <= i_1_reg_267_pp0_iter31_reg;
                i_1_reg_267_pp0_iter33_reg <= i_1_reg_267_pp0_iter32_reg;
                i_1_reg_267_pp0_iter34_reg <= i_1_reg_267_pp0_iter33_reg;
                i_1_reg_267_pp0_iter35_reg <= i_1_reg_267_pp0_iter34_reg;
                i_1_reg_267_pp0_iter36_reg <= i_1_reg_267_pp0_iter35_reg;
                i_1_reg_267_pp0_iter37_reg <= i_1_reg_267_pp0_iter36_reg;
                i_1_reg_267_pp0_iter38_reg <= i_1_reg_267_pp0_iter37_reg;
                i_1_reg_267_pp0_iter39_reg <= i_1_reg_267_pp0_iter38_reg;
                i_1_reg_267_pp0_iter3_reg <= i_1_reg_267_pp0_iter2_reg;
                i_1_reg_267_pp0_iter40_reg <= i_1_reg_267_pp0_iter39_reg;
                i_1_reg_267_pp0_iter41_reg <= i_1_reg_267_pp0_iter40_reg;
                i_1_reg_267_pp0_iter42_reg <= i_1_reg_267_pp0_iter41_reg;
                i_1_reg_267_pp0_iter43_reg <= i_1_reg_267_pp0_iter42_reg;
                i_1_reg_267_pp0_iter44_reg <= i_1_reg_267_pp0_iter43_reg;
                i_1_reg_267_pp0_iter45_reg <= i_1_reg_267_pp0_iter44_reg;
                i_1_reg_267_pp0_iter46_reg <= i_1_reg_267_pp0_iter45_reg;
                i_1_reg_267_pp0_iter47_reg <= i_1_reg_267_pp0_iter46_reg;
                i_1_reg_267_pp0_iter48_reg <= i_1_reg_267_pp0_iter47_reg;
                i_1_reg_267_pp0_iter49_reg <= i_1_reg_267_pp0_iter48_reg;
                i_1_reg_267_pp0_iter4_reg <= i_1_reg_267_pp0_iter3_reg;
                i_1_reg_267_pp0_iter50_reg <= i_1_reg_267_pp0_iter49_reg;
                i_1_reg_267_pp0_iter51_reg <= i_1_reg_267_pp0_iter50_reg;
                i_1_reg_267_pp0_iter52_reg <= i_1_reg_267_pp0_iter51_reg;
                i_1_reg_267_pp0_iter5_reg <= i_1_reg_267_pp0_iter4_reg;
                i_1_reg_267_pp0_iter6_reg <= i_1_reg_267_pp0_iter5_reg;
                i_1_reg_267_pp0_iter7_reg <= i_1_reg_267_pp0_iter6_reg;
                i_1_reg_267_pp0_iter8_reg <= i_1_reg_267_pp0_iter7_reg;
                i_1_reg_267_pp0_iter9_reg <= i_1_reg_267_pp0_iter8_reg;
                icmp_ln40_reg_273 <= icmp_ln40_fu_191_p2;
                icmp_ln40_reg_273_pp0_iter10_reg <= icmp_ln40_reg_273_pp0_iter9_reg;
                icmp_ln40_reg_273_pp0_iter11_reg <= icmp_ln40_reg_273_pp0_iter10_reg;
                icmp_ln40_reg_273_pp0_iter12_reg <= icmp_ln40_reg_273_pp0_iter11_reg;
                icmp_ln40_reg_273_pp0_iter13_reg <= icmp_ln40_reg_273_pp0_iter12_reg;
                icmp_ln40_reg_273_pp0_iter14_reg <= icmp_ln40_reg_273_pp0_iter13_reg;
                icmp_ln40_reg_273_pp0_iter15_reg <= icmp_ln40_reg_273_pp0_iter14_reg;
                icmp_ln40_reg_273_pp0_iter16_reg <= icmp_ln40_reg_273_pp0_iter15_reg;
                icmp_ln40_reg_273_pp0_iter17_reg <= icmp_ln40_reg_273_pp0_iter16_reg;
                icmp_ln40_reg_273_pp0_iter18_reg <= icmp_ln40_reg_273_pp0_iter17_reg;
                icmp_ln40_reg_273_pp0_iter19_reg <= icmp_ln40_reg_273_pp0_iter18_reg;
                icmp_ln40_reg_273_pp0_iter1_reg <= icmp_ln40_reg_273;
                icmp_ln40_reg_273_pp0_iter20_reg <= icmp_ln40_reg_273_pp0_iter19_reg;
                icmp_ln40_reg_273_pp0_iter21_reg <= icmp_ln40_reg_273_pp0_iter20_reg;
                icmp_ln40_reg_273_pp0_iter22_reg <= icmp_ln40_reg_273_pp0_iter21_reg;
                icmp_ln40_reg_273_pp0_iter23_reg <= icmp_ln40_reg_273_pp0_iter22_reg;
                icmp_ln40_reg_273_pp0_iter24_reg <= icmp_ln40_reg_273_pp0_iter23_reg;
                icmp_ln40_reg_273_pp0_iter25_reg <= icmp_ln40_reg_273_pp0_iter24_reg;
                icmp_ln40_reg_273_pp0_iter26_reg <= icmp_ln40_reg_273_pp0_iter25_reg;
                icmp_ln40_reg_273_pp0_iter27_reg <= icmp_ln40_reg_273_pp0_iter26_reg;
                icmp_ln40_reg_273_pp0_iter28_reg <= icmp_ln40_reg_273_pp0_iter27_reg;
                icmp_ln40_reg_273_pp0_iter29_reg <= icmp_ln40_reg_273_pp0_iter28_reg;
                icmp_ln40_reg_273_pp0_iter2_reg <= icmp_ln40_reg_273_pp0_iter1_reg;
                icmp_ln40_reg_273_pp0_iter30_reg <= icmp_ln40_reg_273_pp0_iter29_reg;
                icmp_ln40_reg_273_pp0_iter31_reg <= icmp_ln40_reg_273_pp0_iter30_reg;
                icmp_ln40_reg_273_pp0_iter32_reg <= icmp_ln40_reg_273_pp0_iter31_reg;
                icmp_ln40_reg_273_pp0_iter33_reg <= icmp_ln40_reg_273_pp0_iter32_reg;
                icmp_ln40_reg_273_pp0_iter34_reg <= icmp_ln40_reg_273_pp0_iter33_reg;
                icmp_ln40_reg_273_pp0_iter35_reg <= icmp_ln40_reg_273_pp0_iter34_reg;
                icmp_ln40_reg_273_pp0_iter36_reg <= icmp_ln40_reg_273_pp0_iter35_reg;
                icmp_ln40_reg_273_pp0_iter37_reg <= icmp_ln40_reg_273_pp0_iter36_reg;
                icmp_ln40_reg_273_pp0_iter38_reg <= icmp_ln40_reg_273_pp0_iter37_reg;
                icmp_ln40_reg_273_pp0_iter39_reg <= icmp_ln40_reg_273_pp0_iter38_reg;
                icmp_ln40_reg_273_pp0_iter3_reg <= icmp_ln40_reg_273_pp0_iter2_reg;
                icmp_ln40_reg_273_pp0_iter40_reg <= icmp_ln40_reg_273_pp0_iter39_reg;
                icmp_ln40_reg_273_pp0_iter41_reg <= icmp_ln40_reg_273_pp0_iter40_reg;
                icmp_ln40_reg_273_pp0_iter42_reg <= icmp_ln40_reg_273_pp0_iter41_reg;
                icmp_ln40_reg_273_pp0_iter43_reg <= icmp_ln40_reg_273_pp0_iter42_reg;
                icmp_ln40_reg_273_pp0_iter44_reg <= icmp_ln40_reg_273_pp0_iter43_reg;
                icmp_ln40_reg_273_pp0_iter45_reg <= icmp_ln40_reg_273_pp0_iter44_reg;
                icmp_ln40_reg_273_pp0_iter46_reg <= icmp_ln40_reg_273_pp0_iter45_reg;
                icmp_ln40_reg_273_pp0_iter47_reg <= icmp_ln40_reg_273_pp0_iter46_reg;
                icmp_ln40_reg_273_pp0_iter48_reg <= icmp_ln40_reg_273_pp0_iter47_reg;
                icmp_ln40_reg_273_pp0_iter49_reg <= icmp_ln40_reg_273_pp0_iter48_reg;
                icmp_ln40_reg_273_pp0_iter4_reg <= icmp_ln40_reg_273_pp0_iter3_reg;
                icmp_ln40_reg_273_pp0_iter50_reg <= icmp_ln40_reg_273_pp0_iter49_reg;
                icmp_ln40_reg_273_pp0_iter51_reg <= icmp_ln40_reg_273_pp0_iter50_reg;
                icmp_ln40_reg_273_pp0_iter5_reg <= icmp_ln40_reg_273_pp0_iter4_reg;
                icmp_ln40_reg_273_pp0_iter6_reg <= icmp_ln40_reg_273_pp0_iter5_reg;
                icmp_ln40_reg_273_pp0_iter7_reg <= icmp_ln40_reg_273_pp0_iter6_reg;
                icmp_ln40_reg_273_pp0_iter8_reg <= icmp_ln40_reg_273_pp0_iter7_reg;
                icmp_ln40_reg_273_pp0_iter9_reg <= icmp_ln40_reg_273_pp0_iter8_reg;
                tmp_reg_309 <= grp_pow_generic_double_s_fu_390_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                gmem_addr_read_reg_299 <= m_axi_gmem_RDATA;
                gmem_addr_read_reg_299_pp0_iter10_reg <= gmem_addr_read_reg_299_pp0_iter9_reg;
                gmem_addr_read_reg_299_pp0_iter11_reg <= gmem_addr_read_reg_299_pp0_iter10_reg;
                gmem_addr_read_reg_299_pp0_iter12_reg <= gmem_addr_read_reg_299_pp0_iter11_reg;
                gmem_addr_read_reg_299_pp0_iter13_reg <= gmem_addr_read_reg_299_pp0_iter12_reg;
                gmem_addr_read_reg_299_pp0_iter14_reg <= gmem_addr_read_reg_299_pp0_iter13_reg;
                gmem_addr_read_reg_299_pp0_iter15_reg <= gmem_addr_read_reg_299_pp0_iter14_reg;
                gmem_addr_read_reg_299_pp0_iter16_reg <= gmem_addr_read_reg_299_pp0_iter15_reg;
                gmem_addr_read_reg_299_pp0_iter17_reg <= gmem_addr_read_reg_299_pp0_iter16_reg;
                gmem_addr_read_reg_299_pp0_iter18_reg <= gmem_addr_read_reg_299_pp0_iter17_reg;
                gmem_addr_read_reg_299_pp0_iter19_reg <= gmem_addr_read_reg_299_pp0_iter18_reg;
                gmem_addr_read_reg_299_pp0_iter20_reg <= gmem_addr_read_reg_299_pp0_iter19_reg;
                gmem_addr_read_reg_299_pp0_iter21_reg <= gmem_addr_read_reg_299_pp0_iter20_reg;
                gmem_addr_read_reg_299_pp0_iter22_reg <= gmem_addr_read_reg_299_pp0_iter21_reg;
                gmem_addr_read_reg_299_pp0_iter23_reg <= gmem_addr_read_reg_299_pp0_iter22_reg;
                gmem_addr_read_reg_299_pp0_iter24_reg <= gmem_addr_read_reg_299_pp0_iter23_reg;
                gmem_addr_read_reg_299_pp0_iter25_reg <= gmem_addr_read_reg_299_pp0_iter24_reg;
                gmem_addr_read_reg_299_pp0_iter26_reg <= gmem_addr_read_reg_299_pp0_iter25_reg;
                gmem_addr_read_reg_299_pp0_iter27_reg <= gmem_addr_read_reg_299_pp0_iter26_reg;
                gmem_addr_read_reg_299_pp0_iter28_reg <= gmem_addr_read_reg_299_pp0_iter27_reg;
                gmem_addr_read_reg_299_pp0_iter29_reg <= gmem_addr_read_reg_299_pp0_iter28_reg;
                gmem_addr_read_reg_299_pp0_iter30_reg <= gmem_addr_read_reg_299_pp0_iter29_reg;
                gmem_addr_read_reg_299_pp0_iter31_reg <= gmem_addr_read_reg_299_pp0_iter30_reg;
                gmem_addr_read_reg_299_pp0_iter32_reg <= gmem_addr_read_reg_299_pp0_iter31_reg;
                gmem_addr_read_reg_299_pp0_iter33_reg <= gmem_addr_read_reg_299_pp0_iter32_reg;
                gmem_addr_read_reg_299_pp0_iter34_reg <= gmem_addr_read_reg_299_pp0_iter33_reg;
                gmem_addr_read_reg_299_pp0_iter35_reg <= gmem_addr_read_reg_299_pp0_iter34_reg;
                gmem_addr_read_reg_299_pp0_iter36_reg <= gmem_addr_read_reg_299_pp0_iter35_reg;
                gmem_addr_read_reg_299_pp0_iter37_reg <= gmem_addr_read_reg_299_pp0_iter36_reg;
                gmem_addr_read_reg_299_pp0_iter38_reg <= gmem_addr_read_reg_299_pp0_iter37_reg;
                gmem_addr_read_reg_299_pp0_iter39_reg <= gmem_addr_read_reg_299_pp0_iter38_reg;
                gmem_addr_read_reg_299_pp0_iter40_reg <= gmem_addr_read_reg_299_pp0_iter39_reg;
                gmem_addr_read_reg_299_pp0_iter41_reg <= gmem_addr_read_reg_299_pp0_iter40_reg;
                gmem_addr_read_reg_299_pp0_iter42_reg <= gmem_addr_read_reg_299_pp0_iter41_reg;
                gmem_addr_read_reg_299_pp0_iter43_reg <= gmem_addr_read_reg_299_pp0_iter42_reg;
                gmem_addr_read_reg_299_pp0_iter44_reg <= gmem_addr_read_reg_299_pp0_iter43_reg;
                gmem_addr_read_reg_299_pp0_iter45_reg <= gmem_addr_read_reg_299_pp0_iter44_reg;
                gmem_addr_read_reg_299_pp0_iter46_reg <= gmem_addr_read_reg_299_pp0_iter45_reg;
                gmem_addr_read_reg_299_pp0_iter47_reg <= gmem_addr_read_reg_299_pp0_iter46_reg;
                gmem_addr_read_reg_299_pp0_iter48_reg <= gmem_addr_read_reg_299_pp0_iter47_reg;
                gmem_addr_read_reg_299_pp0_iter5_reg <= gmem_addr_read_reg_299;
                gmem_addr_read_reg_299_pp0_iter6_reg <= gmem_addr_read_reg_299_pp0_iter5_reg;
                gmem_addr_read_reg_299_pp0_iter7_reg <= gmem_addr_read_reg_299_pp0_iter6_reg;
                gmem_addr_read_reg_299_pp0_iter8_reg <= gmem_addr_read_reg_299_pp0_iter7_reg;
                gmem_addr_read_reg_299_pp0_iter9_reg <= gmem_addr_read_reg_299_pp0_iter8_reg;
                mul_reg_319 <= grp_fu_426_p_dout0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter52_stage0, ap_idle_pp0_0to51, ap_idle_pp0_1to53, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to51 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter52_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to53 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln40_fu_213_p2 <= std_logic_vector(unsigned(i_1_reg_267) + unsigned(ap_const_lv15_1));
    add_ln41_1_fu_207_p2 <= std_logic_vector(unsigned(zext_ln40_1_fu_197_p1) + unsigned(sext_ln44_cast_fu_175_p1));
    add_ln41_fu_201_p2 <= std_logic_vector(unsigned(zext_ln40_1_fu_197_p1) + unsigned(sext_ln40_cast_fu_179_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, m_axi_gmem_ARREADY, ap_block_state11_pp0_stage0_iter5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp152_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, m_axi_gmem_ARREADY, ap_block_state11_pp0_stage0_iter5_ignore_call17)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp152 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter5_ignore_call17)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, m_axi_gmem_ARREADY, ap_block_state11_pp0_stage0_iter5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state2_io, ap_block_state10_pp0_stage1_iter4)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage1_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp151_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state2_io, ap_block_state10_pp0_stage1_iter4_ignore_call17)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp151 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage1_iter4_ignore_call17)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state2_io, ap_block_state10_pp0_stage1_iter4)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage1_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_state10_pp0_stage1_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state10_pp0_stage1_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state10_pp0_stage1_iter4_ignore_call17_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state10_pp0_stage1_iter4_ignore_call17 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state11_pp0_stage0_iter5_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state11_pp0_stage0_iter5 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state11_pp0_stage0_iter5_ignore_call17_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state11_pp0_stage0_iter5_ignore_call17 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state2_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln40_reg_273)
    begin
                ap_block_state2_io <= ((icmp_ln40_reg_273 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln40_reg_273, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (icmp_ln40_reg_273 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter52_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter52, icmp_ln40_reg_273_pp0_iter51_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((icmp_ln40_reg_273_pp0_iter51_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter52 = ap_const_logic_1))) then 
            ap_condition_exit_pp0_iter52_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter52_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter52_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter52_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter41, ap_enable_reg_pp0_iter42, ap_enable_reg_pp0_iter43, ap_enable_reg_pp0_iter44, ap_enable_reg_pp0_iter45, ap_enable_reg_pp0_iter46, ap_enable_reg_pp0_iter47, ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, ap_enable_reg_pp0_iter50, ap_enable_reg_pp0_iter51, ap_enable_reg_pp0_iter52, ap_enable_reg_pp0_iter53)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = 
    ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter53 = ap_const_logic_0) and (ap_enable_reg_pp0_iter52 = ap_const_logic_0) and (ap_enable_reg_pp0_iter51 = ap_const_logic_0) and (ap_enable_reg_pp0_iter50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_0) and (ap_enable_reg_pp0_iter47 = ap_const_logic_0) and (ap_enable_reg_pp0_iter46 = ap_const_logic_0) and (ap_enable_reg_pp0_iter45 = ap_const_logic_0) and (ap_enable_reg_pp0_iter44 = ap_const_logic_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_0) and (ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 
    = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to51_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter41, ap_enable_reg_pp0_iter42, ap_enable_reg_pp0_iter43, ap_enable_reg_pp0_iter44, ap_enable_reg_pp0_iter45, ap_enable_reg_pp0_iter46, ap_enable_reg_pp0_iter47, ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, ap_enable_reg_pp0_iter50, ap_enable_reg_pp0_iter51)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = 
    ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter51 = ap_const_logic_0) and (ap_enable_reg_pp0_iter50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_0) and (ap_enable_reg_pp0_iter47 = ap_const_logic_0) and (ap_enable_reg_pp0_iter46 = ap_const_logic_0) and (ap_enable_reg_pp0_iter45 = ap_const_logic_0) and (ap_enable_reg_pp0_iter44 = ap_const_logic_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_0) and (ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 
    = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0_0to51 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to51 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to53_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter41, ap_enable_reg_pp0_iter42, ap_enable_reg_pp0_iter43, ap_enable_reg_pp0_iter44, ap_enable_reg_pp0_iter45, ap_enable_reg_pp0_iter46, ap_enable_reg_pp0_iter47, ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, ap_enable_reg_pp0_iter50, ap_enable_reg_pp0_iter51, ap_enable_reg_pp0_iter52, ap_enable_reg_pp0_iter53)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = 
    ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter53 = ap_const_logic_0) and (ap_enable_reg_pp0_iter52 = ap_const_logic_0) and (ap_enable_reg_pp0_iter51 = ap_const_logic_0) and (ap_enable_reg_pp0_iter50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_0) and (ap_enable_reg_pp0_iter47 = ap_const_logic_0) and (ap_enable_reg_pp0_iter46 = ap_const_logic_0) and (ap_enable_reg_pp0_iter45 = ap_const_logic_0) and (ap_enable_reg_pp0_iter44 = ap_const_logic_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_0) and (ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 
    = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0_1to53 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to53 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_82, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_1 <= ap_const_lv15_0;
        else 
            ap_sig_allocacmp_i_1 <= i_fu_82;
        end if; 
    end process;

    bitcast_ln41_1_fu_243_p1 <= gmem_addr_1_read_reg_304;
    bitcast_ln41_fu_247_p1 <= gmem_addr_read_reg_299_pp0_iter48_reg;

    gmem_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, m_axi_gmem_ARREADY, icmp_ln40_reg_273, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln40_reg_273 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, m_axi_gmem_RVALID, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_171_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_171_ce <= ap_const_logic_1;
        else 
            grp_fu_171_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_426_p_ce <= grp_fu_171_ce;
    grp_fu_426_p_din0 <= bitcast_ln41_fu_247_p1;
    grp_fu_426_p_din1 <= tmp_reg_309;

    grp_pow_generic_double_s_fu_141_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_ignoreCallOp151, ap_block_pp0_stage0_11001_ignoreCallOp152)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp152) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp151) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_pow_generic_double_s_fu_141_ap_ce <= ap_const_logic_1;
        else 
            grp_pow_generic_double_s_fu_141_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_pow_generic_double_s_fu_141_ap_ready <= grp_pow_generic_double_s_fu_390_p_ready;
    grp_pow_generic_double_s_fu_390_p_ce <= grp_pow_generic_double_s_fu_141_ap_ce;
    grp_pow_generic_double_s_fu_390_p_din1 <= bitcast_ln41_1_fu_243_p1;
    grp_pow_generic_double_s_fu_390_p_din2 <= R_exp;
    grp_pow_generic_double_s_fu_390_p_start <= grp_pow_generic_double_s_fu_141_ap_start_reg;
    icmp_ln40_fu_191_p2 <= "1" when (ap_sig_allocacmp_i_1 = ap_const_lv15_4298) else "0";
    integral_address0 <= zext_ln40_fu_251_p1(15 - 1 downto 0);

    integral_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter53, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter53 = ap_const_logic_1))) then 
            integral_ce0 <= ap_const_logic_1;
        else 
            integral_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    integral_d0 <= mul_reg_319;

    integral_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter53, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter53 = ap_const_logic_1))) then 
            integral_we0 <= ap_const_logic_1;
        else 
            integral_we0 <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln40_reg_273, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, sext_ln41_fu_218_p1, sext_ln41_1_fu_233_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_gmem_ARADDR <= sext_ln41_1_fu_233_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln40_reg_273 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            m_axi_gmem_ARADDR <= sext_ln41_fu_218_p1;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln40_reg_273, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln40_reg_273 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv64_0;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv8_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
        sext_ln40_cast_fu_179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln40),62));

        sext_ln41_1_fu_233_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln41_1_reg_282),64));

        sext_ln41_fu_218_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln41_reg_277),64));

        sext_ln44_cast_fu_175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln44),62));

    zext_ln40_1_fu_197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i_1),62));
    zext_ln40_fu_251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_267_pp0_iter52_reg),64));
end behav;
